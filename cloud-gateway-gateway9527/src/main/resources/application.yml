server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true   #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh   #路由的ID，没有固定规则但要求唯一，建议配合服务名
          # uri: http://localhost:8001   #匹配后提供服务的路由地址

          #匹配后提供服务的路由地址，需要注意的是uri的协议为lb，表示启用Gateway的负载均衡功能。
          uri: lb://cloud-payment-service
          predicates:
            # 断言，路径相匹配的进行路由
            - Path=/payment/get/**

        - id: payment_routh2
          # uri: http://localhost:8001

          uri: lb://cloud-payment-service
          predicates:
            # 断言，路径相匹配的进行路由
            - Path=/payment/lb/**

            # 断言，要在指定时间之后访问该路径才能路由
            - After=2020-07-29T21:45:34.781+08:00[Asia/Shanghai]

            # 断言，要在指定时间之前访问该路径才能路由
            #- Before=2025-02-05T15:10:03.685+08:00[Asia/Shanghai]

            # 断言，要在指定的两个时间段之间访问该路径才能路由
            #- Between=2020-02-02T17:45:06.206+08:00[Asia/Shanghai],2025-03-25T18:59:06.206+08:00[Asia/Shanghai]

            # 断言，通过获取对应的 Cookie name值和正则表达式去匹配
            # 可以在cmd命令行中使用curl命令进行访问：curl http://localhost:9527/payment/lb --cookie "username=zzyy"
            #- Cookie=username,zzyy

            # 断言，通过获取对应的属性名和正则表达式去匹配，该配置表示请求头要有X-Request-Id属性并且值为正整数
            # 可以在cmd命令行中使用curl命令进行访问：curl http://localhost:9527/payment/lb -H "X-Request-Id:123"
            #- Header=X-Request-Id, \d+

            # 断言，要求Host中必须要有指定的主机地址才能路由
            # 可以在cmd命令行中使用curl命令进行访问：curl http://localhost:9527/payment/lb -H "Host: xxx.atguigu.com"
            #- Host=**.atguigu.com

            # 断言，指定请求方式必须为GET请求
            - Method=GET

            # 断言，请求要带有参数名为username并且值还要是正整数才能路由
            # 可以在cmd命令行中使用curl命令进行访问：curl http://localhost:9527/payment/lb?username=31
            #- Query=username, \d+
          # 过滤器，比起配置的方式更常用的还是使用Java代码自定义过滤器
          filters:
            #过滤器工厂会给匹配的请求加上一对请求头，名称为X-Request-Id值为1024
            #- AddRequestParameter=X-Request-Id,1024


eureka:
  instance:
    hostname: cloud-gateway-service
  #服务提供者provider注册进eureka服务列表内
  client:
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://eureka7001.com:7001/eureka


